#!/bin/bash
echo "Helping..."
echo ""
echo ""

echo "üìö Claude Code PM - Project Management System"
echo "============================================="
echo ""
echo "üéØ Vision-Driven Workflow"
echo "  1. /pm:vision-new <name>      - Create product vision"
echo "  2. /pm:vision-new-sub <name>  - Create sub-vision"
echo "  3. /pm:prd-new <name>         - Create a new PRD"
echo "  4. /pm:prd-parse <name>       - Convert PRD to epic"
echo "  5. /pm:vision-match --epic <name> - Link epic to vision"
echo "  6. /pm:epic-decompose <name>  - Break into tasks"
echo "  7. /pm:epic-sync <name>       - Push to GitHub"
echo "  8. /pm:epic-start <name>      - Start parallel execution"
echo ""
echo "üéØ Vision Commands"
echo "  /pm:vision-new <name>       - Create new product vision"
echo "  /pm:vision-new-sub <name>   - Create new sub-vision"
echo "  /pm:vision-list             - List all visions"
echo "  /pm:vision-tree             - Show vision hierarchy"
echo "  /pm:vision-edit <name>      - Edit vision file"
echo "  /pm:vision-match <desc>     - Match description to existing visions"
echo "  /pm:vision-match --epic <name> - Match epic to vision"
echo "  /pm:vision-audit            - Audit all vision-epic links"
echo "  /pm:vision-audit <epic>     - Audit specific epic"
echo "  /pm:vision-orphans          - Show unlinked epics"
echo "  /pm:vision-audit --fix      - Auto-fix broken links"
echo ""
echo "üìÑ PRD Commands"
echo "  /pm:prd-new <name>     - Launch brainstorming for new product requirement"
echo "  /pm:prd-parse <name>   - Convert PRD to implementation epic"
echo "  /pm:prd-list           - List all PRDs"
echo "  /pm:prd-edit <name>    - Edit existing PRD"
echo "  /pm:prd-status         - Show PRD implementation status"
echo ""
echo "üìö Epic Commands"
echo "  /pm:epic-decompose <name> - Break epic into task files"
echo "  /pm:epic-sync <name>      - Push epic and tasks to GitHub"
echo "  /pm:epic-oneshot <name>   - Decompose and sync in one command"
echo "  /pm:epic-list             - List all epics"
echo "  /pm:epic-show <name>      - Display epic and its tasks"
echo "  /pm:epic-status [name]    - Show epic progress"
echo "  /pm:epic-close <name>     - Mark epic as complete"
echo "  /pm:epic-edit <name>      - Edit epic details"
echo "  /pm:epic-refresh <name>   - Update epic progress from tasks"
echo "  /pm:epic-start <name>     - Launch parallel agent execution"
echo "  /pm:epic-link <epic> <vision> - Link epic to vision"
echo "  /pm:epic-link --show <epic>    - Show epic's vision links"
echo "  /pm:epic-link --unlink <epic>  - Remove vision links"
echo ""
echo "üìù Issue Commands"
echo "  /pm:issue-show <num>      - Display issue and sub-issues"
echo "  /pm:issue-status <num>    - Check issue status"
echo "  /pm:issue-start <num>     - Begin work with specialized agent"
echo "  /pm:issue-sync <num>      - Push updates to GitHub"
echo "  /pm:issue-close <num>     - Mark issue as complete"
echo "  /pm:issue-reopen <num>    - Reopen closed issue"
echo "  /pm:issue-edit <num>      - Edit issue details"
echo "  /pm:issue-analyze <num>   - Analyze for parallel work streams"
echo ""
echo "üîÑ Workflow Commands"
echo "  /pm:next               - Show next priority tasks"
echo "  /pm:status             - Overall project dashboard"
echo "  /pm:standup            - Daily standup report"
echo "  /pm:blocked            - Show blocked tasks"
echo "  /pm:in-progress        - List work in progress"
echo ""
echo "üîó Sync Commands"
echo "  /pm:sync               - Full bidirectional sync with GitHub"
echo "  /pm:import <issue>     - Import existing GitHub issues"
echo ""
echo "üõ°Ô∏è Quality Assurance Commands"  
echo "  /pm:fix-all [path]     - Complete fix workflow: analyze ‚Üí plan ‚Üí execute"
echo "  /pm:code-review [path] - Conduct comprehensive code review (SOLID, DRY, KISS, etc.)"
echo "  /pm:anti-cheat [path]  - Detect cheat patterns and fake implementations"
echo "  /pm:self-check [path]  - Run complete quality validation automatically"
echo "  /pm:plan-fixes [path]  - Analyze issues and create linear fix plan"
echo "  /pm:plan-execute       - Execute plan.md with linear task completion"
echo ""
echo "üîß Maintenance Commands"
echo "  /pm:validate [options] - Comprehensive project validation (lint, test, build, runtime)"
echo "  /pm:clean              - Archive completed work"
echo "  /pm:search <query>     - Search across all content"
echo ""
echo "‚öôÔ∏è  Setup Commands"
echo "  /pm:init               - Install dependencies and configure GitHub"
echo "  /pm:help               - Show this help message"
echo ""
echo "üí° Tips"
echo "  ‚Ä¢ Start with vision: vision-new ‚Üí vision-new-sub ‚Üí prd-new ‚Üí prd-parse"
echo "  ‚Ä¢ Use /pm:vision-tree for quick hierarchy overview"  
echo "  ‚Ä¢ Use /pm:vision-orphans to find unlinked epics"
echo "  ‚Ä¢ Use /pm:next to find available work"
echo "  ‚Ä¢ Run /pm:status for project overview"
echo "  ‚Ä¢ View README.md for complete documentation"

exit 0
